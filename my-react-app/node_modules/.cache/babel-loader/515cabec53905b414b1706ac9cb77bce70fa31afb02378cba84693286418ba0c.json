{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,BarChart,Bar,PieChart,Pie,Cell,ResponsiveContainer,LabelList}from'recharts';import{Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,AppBar,Toolbar,Button,Container,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[data,setData]=useState([]);const[endpoint,setEndpoint]=useState('avgConsMake');const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[showOriginalData,setShowOriginalData]=useState(false);useEffect(()=>{fetchData(endpoint);},[endpoint]);const formatData=data=>{return data.map(item=>{const formattedItem={...item};for(const key in item){if(typeof item[key]==='number'){formattedItem[key]=parseFloat(item[key].toFixed(2));}else if(item[key]===undefined||item[key]===null){formattedItem[key]=0;// Or handle this case appropriately\n}}return formattedItem;});};const fetchData=async endpoint=>{setLoading(true);setError(null);try{const response=await axios.get(`http://localhost:5000/api/${endpoint}`);console.log(\"Fetched data:\",response.data);if(response.data&&Array.isArray(response.data)){setData(formatData(response.data));}else{throw new Error(\"Unexpected data format\");}}catch(err){setError(`Error fetching ${endpoint} data: ${err.message}`);console.error(err);}finally{setLoading(false);}};const fetchOriginalData=async()=>{setLoading(true);setError(null);try{const response=await axios.get('http://localhost:5000/api/fuel_consumption_ratings');console.log(\"Fetched original data:\",response.data);if(response.data&&Array.isArray(response.data)){setData(response.data);setShowOriginalData(true);}else{throw new Error(\"Unexpected data format\");}}catch(err){setError(`Error fetching original data: ${err.message}`);console.error(err);}finally{setLoading(false);}};const renderChart=()=>{if(!data||data.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No data available\"});}const chartType={'avgConsMake':'BarChart','topEfficient':'BarChart','fuelTypeDist':'PieChart','co2ByClass':'BarChart','bestSmog':'BarChart','consByTrans':'BarChart','co2RatingPct':'BarChart','topLowCo2':'BarChart'}[endpoint]||'LineChart';const dataKeyMap={'avgConsMake':{xKey:'MAKE',yKey:'AVG_CONS'},'topEfficient':{xKey:'MODEL',yKey:'COMB_CONS'},'fuelTypeDist':{xKey:'FUEL_TYPE',yKey:'COUNT_FT'},'co2ByClass':{xKey:'VEH_CLASS',yKey:'AVG_CO2'},'bestSmog':{xKey:'MODEL',yKey:'SMOG_RATING'},'consByTrans':{xKey:'TRANS',yKey:'AVG_CONS'},'co2RatingPct':{xKey:'CO2_RATING',yKey:'PERCENTAGE'},'topLowCo2':{xKey:'MAKE',yKey:'AVG_CO2'}};const{xKey,yKey}=dataKeyMap[endpoint]||{xKey:'x',yKey:'y'};const COLORS=['#0088FE','#00C49F','#FFBB28','#FF8042','#AF19FF','#FF19A3','#19FFDD','#FFA319'];switch(chartType){case'PieChart':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:data,dataKey:yKey,nameKey:xKey,outerRadius:150,fill:\"#8884d8\",label:true,labelLine:false,children:data.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},`cell-${index}`))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>value.toFixed(2)}),/*#__PURE__*/_jsx(Legend,{})]})});case'BarChart':const barSize=Math.max(40,200/data.length);const chartHeight=Math.max(500,data.length*40);return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:chartHeight,children:/*#__PURE__*/_jsxs(BarChart,{layout:\"vertical\",data:data,margin:{top:20,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#eee\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\",tickFormatter:value=>value.toFixed(2)}),/*#__PURE__*/_jsx(YAxis,{type:\"category\",dataKey:xKey,width:\"100%\"}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>value.toFixed(2)}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:yKey,fill:\"#8884d8\",barSize:barSize,minPointLength:10,children:/*#__PURE__*/_jsx(LabelList,{dataKey:yKey,position:\"right\",formatter:value=>value.toFixed(2)})})]})});default:return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#eee\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:xKey}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:value=>value.toFixed(2)}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>value.toFixed(2)}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:yKey,stroke:\"#8884d8\"})]})});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",style:{marginBottom:'20px'},children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",style:{flexGrow:1,fontWeight:'bold'},children:\"Vehicle Data Dashboard\"}),['avgConsMake','topEfficient','fuelTypeDist','co2ByClass','bestSmog','consByTrans','co2RatingPct','topLowCo2'].map((key,index)=>/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{marginRight:'10px',borderRadius:'20px',textTransform:'none'},onClick:()=>{setEndpoint(key);setShowOriginalData(false);},children:key.split(/(?=[A-Z])/).join(' ')},index)),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",style:{marginRight:'10px',borderRadius:'20px',textTransform:'none'},onClick:fetchOriginalData,children:\"Show Original Data\"})]})}),/*#__PURE__*/_jsxs(Container,{style:{display:'flex',flexDirection:'column',height:'calc(100vh - 80px)'},children:[loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),showOriginalData?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',overflowX:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Original Data Table\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,style:{maxWidth:'1200px',overflowX:'auto'},children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Model Year\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Make\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Model\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Vehicle Class\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Engine Size\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Cylinders\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Transmission\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Fuel Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"City Consumption\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Highway Consumption\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Combined Consumption\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Combined MPG\"}),/*#__PURE__*/_jsx(TableCell,{children:\"CO2 Emissions\"}),/*#__PURE__*/_jsx(TableCell,{children:\"CO2 Rating\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Smog Rating\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:data.map((row,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:row.MODEL_YEAR}),/*#__PURE__*/_jsx(TableCell,{children:row.MAKE}),/*#__PURE__*/_jsx(TableCell,{children:row.MODEL}),/*#__PURE__*/_jsx(TableCell,{children:row.VEHICLE_CLASS}),/*#__PURE__*/_jsx(TableCell,{children:row.ENGINE_SIZE}),/*#__PURE__*/_jsx(TableCell,{children:row.CYLINDERS}),/*#__PURE__*/_jsx(TableCell,{children:row.TRANSMISSION}),/*#__PURE__*/_jsx(TableCell,{children:row.FUEL_TYPE}),/*#__PURE__*/_jsx(TableCell,{children:row.CITY_CONSUMPTION}),/*#__PURE__*/_jsx(TableCell,{children:row.HIGHWAY_CONSUMPTION}),/*#__PURE__*/_jsx(TableCell,{children:row.COMBINED_CONSUMPTION}),/*#__PURE__*/_jsx(TableCell,{children:row.COMBINED_MPG}),/*#__PURE__*/_jsx(TableCell,{children:row.CO2_EMISSIONS}),/*#__PURE__*/_jsx(TableCell,{children:row.CO2_RATING}),/*#__PURE__*/_jsx(TableCell,{children:row.SMOG_RATING})]},index))})]})})]}):renderChart()]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarChart","Bar","PieChart","Pie","Cell","ResponsiveContainer","LabelList","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","AppBar","Toolbar","Button","Container","Typography","jsx","_jsx","jsxs","_jsxs","App","data","setData","endpoint","setEndpoint","error","setError","loading","setLoading","showOriginalData","setShowOriginalData","fetchData","formatData","map","item","formattedItem","key","parseFloat","toFixed","undefined","response","get","console","log","Array","isArray","Error","err","message","fetchOriginalData","renderChart","length","children","chartType","dataKeyMap","xKey","yKey","COLORS","width","height","dataKey","nameKey","outerRadius","fill","label","labelLine","entry","index","formatter","value","barSize","Math","max","chartHeight","layout","margin","top","right","left","bottom","stroke","type","tickFormatter","minPointLength","position","style","marginBottom","variant","flexGrow","fontWeight","color","marginRight","borderRadius","textTransform","onClick","split","join","display","flexDirection","alignItems","overflowX","component","maxWidth","row","MODEL_YEAR","MAKE","MODEL","VEHICLE_CLASS","ENGINE_SIZE","CYLINDERS","TRANSMISSION","FUEL_TYPE","CITY_CONSUMPTION","HIGHWAY_CONSUMPTION","COMBINED_CONSUMPTION","COMBINED_MPG","CO2_EMISSIONS","CO2_RATING","SMOG_RATING"],"sources":["C:/Users/Joey/Desktop/AD database/DB_APP/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer, LabelList\n} from 'recharts';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, AppBar, Toolbar, Button, Container, Typography } from '@mui/material';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [endpoint, setEndpoint] = useState('avgConsMake');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showOriginalData, setShowOriginalData] = useState(false);\n\n  useEffect(() => {\n    fetchData(endpoint);\n  }, [endpoint]);\n\n  const formatData = (data) => {\n    return data.map(item => {\n      const formattedItem = { ...item };\n      for (const key in item) {\n        if (typeof item[key] === 'number') {\n          formattedItem[key] = parseFloat(item[key].toFixed(2));\n        } else if (item[key] === undefined || item[key] === null) {\n          formattedItem[key] = 0; // Or handle this case appropriately\n        }\n      }\n      return formattedItem;\n    });\n  };\n\n  const fetchData = async (endpoint) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/${endpoint}`);\n      console.log(\"Fetched data:\", response.data);\n      if (response.data && Array.isArray(response.data)) {\n        setData(formatData(response.data));\n      } else {\n        throw new Error(\"Unexpected data format\");\n      }\n    } catch (err) {\n      setError(`Error fetching ${endpoint} data: ${err.message}`);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchOriginalData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/api/fuel_consumption_ratings');\n      console.log(\"Fetched original data:\", response.data);\n      if (response.data && Array.isArray(response.data)) {\n        setData(response.data);\n        setShowOriginalData(true);\n      } else {\n        throw new Error(\"Unexpected data format\");\n      }\n    } catch (err) {\n      setError(`Error fetching original data: ${err.message}`);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderChart = () => {\n    if (!data || data.length === 0) {\n      return <p>No data available</p>;\n    }\n\n    const chartType = {\n      'avgConsMake': 'BarChart',\n      'topEfficient': 'BarChart',\n      'fuelTypeDist': 'PieChart',\n      'co2ByClass': 'BarChart',\n      'bestSmog': 'BarChart',\n      'consByTrans': 'BarChart',\n      'co2RatingPct': 'BarChart',\n      'topLowCo2': 'BarChart'\n    }[endpoint] || 'LineChart';\n\n    const dataKeyMap = {\n      'avgConsMake': { xKey: 'MAKE', yKey: 'AVG_CONS' },\n      'topEfficient': { xKey: 'MODEL', yKey: 'COMB_CONS' },\n      'fuelTypeDist': { xKey: 'FUEL_TYPE', yKey: 'COUNT_FT' },\n      'co2ByClass': { xKey: 'VEH_CLASS', yKey: 'AVG_CO2' },\n      'bestSmog': { xKey: 'MODEL', yKey: 'SMOG_RATING' },\n      'consByTrans': { xKey: 'TRANS', yKey: 'AVG_CONS' },\n      'co2RatingPct': { xKey: 'CO2_RATING', yKey: 'PERCENTAGE' },\n      'topLowCo2': { xKey: 'MAKE', yKey: 'AVG_CO2' }\n    };\n\n    const { xKey, yKey } = dataKeyMap[endpoint] || { xKey: 'x', yKey: 'y' };\n\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#FF19A3', '#19FFDD', '#FFA319'];\n\n    switch (chartType) {\n      case 'PieChart':\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie \n                data={data} \n                dataKey={yKey} \n                nameKey={xKey} \n                outerRadius={150} \n                fill=\"#8884d8\" \n                label \n                labelLine={false}\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip formatter={(value) => value.toFixed(2)} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        );\n      case 'BarChart':\n        const barSize = Math.max(40, 200 / data.length);\n        const chartHeight = Math.max(500, data.length * 40);\n        return (\n          <ResponsiveContainer width=\"100%\" height={chartHeight}>\n            <BarChart layout=\"vertical\" data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid stroke=\"#eee\" />\n              <XAxis type=\"number\" tickFormatter={(value) => value.toFixed(2)} />\n              <YAxis type=\"category\" dataKey={xKey} width=\"100%\" />\n              <Tooltip formatter={(value) => value.toFixed(2)} />\n              <Legend />\n              <Bar dataKey={yKey} fill=\"#8884d8\" barSize={barSize} minPointLength={10}>\n                <LabelList dataKey={yKey} position=\"right\" formatter={(value) => value.toFixed(2)} />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      default:\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={data}>\n              <CartesianGrid stroke=\"#eee\" />\n              <XAxis dataKey={xKey} />\n              <YAxis tickFormatter={(value) => value.toFixed(2)} />\n              <Tooltip formatter={(value) => value.toFixed(2)} />\n              <Legend />\n              <Line type=\"monotone\" dataKey={yKey} stroke=\"#8884d8\" />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" style={{ marginBottom: '20px' }}>\n        <Toolbar>\n          <Typography variant=\"h4\" style={{ flexGrow: 1, fontWeight: 'bold' }}>\n            Vehicle Data Dashboard\n          </Typography>\n          {['avgConsMake', 'topEfficient', 'fuelTypeDist', 'co2ByClass', 'bestSmog', 'consByTrans', 'co2RatingPct', 'topLowCo2'].map((key, index) => (\n            <Button\n              key={index}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: '10px', borderRadius: '20px', textTransform: 'none' }}\n              onClick={() => {\n                setEndpoint(key);\n                setShowOriginalData(false);\n              }}\n            >\n              {key.split(/(?=[A-Z])/).join(' ')}\n            </Button>\n          ))}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginRight: '10px', borderRadius: '20px', textTransform: 'none' }}\n            onClick={fetchOriginalData}\n          >\n            Show Original Data\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ display: 'flex', flexDirection: 'column', height: 'calc(100vh - 80px)' }}>\n        {loading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n        {showOriginalData ? (\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', overflowX: 'auto' }}>\n            <h2>Original Data Table</h2>\n            <TableContainer component={Paper} style={{ maxWidth: '1200px', overflowX: 'auto' }}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Model Year</TableCell>\n                    <TableCell>Make</TableCell>\n                    <TableCell>Model</TableCell>\n                    <TableCell>Vehicle Class</TableCell>\n                    <TableCell>Engine Size</TableCell>\n                    <TableCell>Cylinders</TableCell>\n                    <TableCell>Transmission</TableCell>\n                    <TableCell>Fuel Type</TableCell>\n                    <TableCell>City Consumption</TableCell>\n                    <TableCell>Highway Consumption</TableCell>\n                    <TableCell>Combined Consumption</TableCell>\n                    <TableCell>Combined MPG</TableCell>\n                    <TableCell>CO2 Emissions</TableCell>\n                    <TableCell>CO2 Rating</TableCell>\n                    <TableCell>Smog Rating</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((row, index) => (\n                    <TableRow key={index}>\n                    <TableCell>{row.MODEL_YEAR}</TableCell>\n                    <TableCell>{row.MAKE}</TableCell>\n                    <TableCell>{row.MODEL}</TableCell>\n                    <TableCell>{row.VEHICLE_CLASS}</TableCell>\n                    <TableCell>{row.ENGINE_SIZE}</TableCell>\n                    <TableCell>{row.CYLINDERS}</TableCell>\n                    <TableCell>{row.TRANSMISSION}</TableCell>\n                    <TableCell>{row.FUEL_TYPE}</TableCell>\n                    <TableCell>{row.CITY_CONSUMPTION}</TableCell>\n                    <TableCell>{row.HIGHWAY_CONSUMPTION}</TableCell>\n                    <TableCell>{row.COMBINED_CONSUMPTION}</TableCell>\n                    <TableCell>{row.COMBINED_MPG}</TableCell>\n                    <TableCell>{row.CO2_EMISSIONS}</TableCell>\n                    <TableCell>{row.CO2_RATING}</TableCell>\n                    <TableCell>{row.SMOG_RATING}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        ) : (\n          renderChart()\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}